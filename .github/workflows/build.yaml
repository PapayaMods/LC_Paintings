name: Build

on:
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: 1.77.0

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env
        run: |
          echo "PKG_CONTENTS=~/build/contents" >> $GITHUB_ENV
          echo "PKG_ZIP=~/build/pkg.zip" >> $GITHUB_ENV

      - name: Create build directory structure
        run: mkdir -p ${{ env.PKG_CONTENTS }}

      - name: Template manifest.json
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: manifest.json.j2
          output_file: ${{ env.PKG_CONTENTS }}/manifest.json
          strict: true
          variables: |
            name=${{ github.event.repository.name }}
            version_number=${{ github.ref_name }}
            website_url=${{ github.server_url }}/${{ github.repository }}

      - name: Check out lpg
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.repository.organization }}/lpg
          path: ./lpg

      - name: Build image artifacts
        run: |
          cargo run --manifest-path ./lpg/Cargo.toml -- \
            --templates ./lpg/templates \
            --input images \
            --output ${{ env.PKG_CONTENTS }}

      - name: Copy remaining mod artifacts into build directory
        run: |
          cp icon.png ${{ env.PKG_CONTENTS }}
          cp README.md ${{ env.PKG_CONTENTS }}

      - name: Build deliverable
        working-directory: ${{ env.PKG_CONTENTS }}
        run: zip -r ${{ env.PKG_ZIP }} *

      - name: Upload GHA artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ env.PKG_ZIP }}
          if-no-files-found: error
          overwrite: false
